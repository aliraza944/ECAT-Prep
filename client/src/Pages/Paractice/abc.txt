import React, { useState, useEffect } from "react";
import ParacticeNav from "./ParacticeNav";
import { Paper, Button } from "@material-ui/core";
import Radio from "@material-ui/core/Radio";
import RadioGroup from "@material-ui/core/RadioGroup";
import FormControlLabel from "@material-ui/core/FormControlLabel";
import FormControl from "@material-ui/core/FormControl";
import useStyles from "./Styles";
import { useLocation, useParams } from "react-router-dom";
import queryString from "query-string";
import axios from "axios";
import CircularProgress from "@material-ui/core/CircularProgress";

const Paractice = () => {
  const [value, setValue] = useState("");
  const [questions, setQuestions] = useState([]);
  const [questionsCounter, setQuestionsCounter] = useState(0);
  const location = useLocation();
  const [spinner, setSpinner] = useState(false);

  const { chapter, part } = queryString.parse(location.search);
  const { subject } = useParams();
  const nextQuestion = (e) => {
    e.preventDefault();
    if (questionsCounter + 1 > questions.length) {
      setQuestionsCounter(0);
    }
    setQuestionsCounter(questionsCounter + 1);
  };

  const previousQuestion = (e) => {
    e.preventDefault();
    if (questionsCounter + 1 > questions.length) {
      setQuestionsCounter(0);
    }
    setQuestionsCounter(questionsCounter + 1);
  };
  const getQuestions = async () => {
    setSpinner(true);

    try {
      const res = await axios.get(
        `http://localhost:5000/postquestions?subject=${subject}&chapter=${chapter}&part=${part}`,

        {
          headers: {
            "Content-Type": "application/json",
          },
          withCredentials: true,
        }
      );
      // console.log(res);
      setQuestions(res.data);
      console.log(questions);
      if (res) {
        setSpinner(false);

        // console.log(res);
      }
    } catch (error) {
      if (error) throw error;
    }
  };
  useEffect(() => {
    getQuestions();
  }, []);

  const handleChange = (event) => {
    setValue(event.target.value);
  };
  const classes = useStyles();
  return (
    <div>
      <ParacticeNav />
      {spinner && <CircularProgress size="2rem" color="primary" />}
      {questions && (
        <div className={classes.paracticeContent}>
          <Paper className={classes.paper} elevation={0}>
            <div className={classes.paperContent}>
              <p className={classes.qustionsAmount}>
                Question {questionsCounter + 1} of {questions.length}
              </p>
              <h2 className={classes.qeustionTitle}>
                {questions[questionsCounter].questionstatement}
              </h2>
              <FormControl component="fieldset">
                <RadioGroup
                  aria-label="question"
                  name="paraticeQuestion"
                  value={value}
                  onChange={handleChange}
                >
                  <FormControlLabel
                    value={questions[questionsCounter].option1}
                    control={<Radio />}
                    label={questions[questionsCounter].option1}
                  />
                  <FormControlLabel
                    value={questions[questionsCounter].option2}
                    control={<Radio />}
                    label={questions[questionsCounter].option2}
                  />
                  <FormControlLabel
                    value={questions[questionsCounter].option3}
                    control={<Radio />}
                    label={questions[questionsCounter].option3}
                  />
                </RadioGroup>
              </FormControl>
            </div>
          </Paper>
          <div className={classes.questionBtn}>
            <Button
              style={{ background: "#e83030" }}
              onClick={previousQuestion}
            >
              Previous
            </Button>
            <Button style={{ background: "#81dd1c" }} onClick={nextQuestion}>
              Next
            </Button>
          </div>
        </div>
      )}
    </div>
  );
};

export default Paractice;
